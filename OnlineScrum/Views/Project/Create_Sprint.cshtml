@model OnlineScrum.Models.Sprint
@{
    ViewBag.Title = "Create_Sprint";
}

<h2>Create_Sprint</h2>

@section Scripts
{
    <script src="@Url.Content("~/Scripts/JS.js")"></script>
}
<div class="col-md-8">
    @using (@Html.BeginForm("Project", "Create_Project", FormMethod.Post))
    {

        <div class="login-editor">

            <div class="form-group row" style="display:inline">

                @Html.LabelFor(model => model.SprintName, new { @class = "col-md-5 col-form-label" })
            </div>
            <div style="display:inline" class="col-md-10">
                @Html.TextBoxFor(model => model.SprintName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SprintName)
            </div>
            <br />
            <br />

            <div class="form-group row" style="display:inline">

                @Html.LabelFor(model => model.StartDate, new { @class = "col-md-5 col-form-label" })
            </div>
            <div style="display:inline" class="col-md-10">
                @Html.TextBoxFor(model => model.StartDate, "{0:dd/MM/yyyy}", new { @type = "date", @Value = DateTime.Now.ToString("yyyy-MM-dd"), @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StartDate)
            </div>
            <br />
            <br />

            <div class="form-group" id="finishDiv">
                <div class="row col-form-label" style="display:inline">

                    @Html.LabelFor(model => model.FinishDate, new { @class = "col-md-10 col-form-label" })
                </div>
                <div style="display:inline" class="form-control-warning col-md-10">
                    @Html.TextBoxFor(model => model.FinishDate, "{0:dd/MM/yyyy}", new { @type = "date", @Value = DateTime.Now.AddDays(15).ToString("yyyy-MM-dd"), @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FinishDate)
                    <p id="finishWarning" style="display: none;color:#d89520">Typical Sprints are between 2 weeks to 1 month</p>
                </div>
            </div>

            <div class="form-group row" style="display:inline">

                @Html.LabelFor(model => model.MeetingLocation, new { @class = "col-md-5 col-form-label" })
            </div>
            <div style="display:inline" class="col-md-10">
                @Html.TextBoxFor(model => model.MeetingLocation, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MeetingLocation)
            </div>
            <br />
            <br />

            <div class="form-group row" style="display:inline">

                @Html.LabelFor(model => model.MeetingInterval, new { @class = "col-md-5 col-form-label" })
            </div>
            <div style="display:inline" class="col-md-10">
                @Html.TextBoxFor(model => model.MeetingInterval, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MeetingInterval)
            </div>
            <br />
            <br />

            @Html.ValidationSummary()
            @if (ViewBag.Error != "" && ViewBag.Error != null)
            {
                <div class="alert alert-danger fade in">
                    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                    <strong>Error!</strong> @ViewBag.Error
                </div>

            }
            <br />
            <input type="submit" value="Submit" class="btn btn-primary" />
        </div>
        <br />
        <br />

    }
</div>
<div class="well col-md-4">
    <p>A Sprint is typically between 2 weeks to 1 month period where the Scrum Team aims to complete an increment a set of items.</p>
</div>

<script>
    var inputs = $('input[type="date"]');
    var finishDate = $('#finishDiv');
    var finishWarning = $('#finishWarning');

    inputs.each(function () {
        $(this).data('val', this.value);
    }).on('keyup', function () {
        inputs.each(function () {
            var startDt = document.getElementById("StartDate").value;
            var endDt = document.getElementById("FinishDate").value;
            var sDate = new Date(startDt);
            var fDate = new Date(endDt);
            var date = new Date(sDate.getTime() + 31 * 24 * 60 * 60 * 1000);
            var date2 = new Date(sDate.getTime() + 15 * 24 * 60 * 60 * 1000);
            if ((date < fDate) || (date2 > fDate)) {
                finishDate.addClass("has-warning");
                finishWarning.show();
                console.log("show");
            } else {
                finishDate.removeClass("has-warning");
                finishWarning.hide();
                console.log("hide");
            }
        });
    });




</script>