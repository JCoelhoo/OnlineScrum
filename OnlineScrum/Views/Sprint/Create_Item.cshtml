@model OnlineScrum.Models.Item
@{
    ViewBag.Title = "Create_Item";
}

<h2>Create_Item</h2>

@using (@Html.BeginForm("Sprint", "Create_Item", FormMethod.Post))
{

    <div class="login-editor">
        <div class="form-group row" style="display:inline">

            @Html.LabelFor(model => model.ItemName, new { @class = "col-md-2 col-form-label" })
        </div>
        <div style="display:inline" class="col-md-10">
            @Html.TextBoxFor(model => model.ItemName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ItemName)
        </div>
        <br />
        <br />

        <div class="form-group row" style="display:inline">

            @Html.LabelFor(model => model.AssignedTo, new { @class = "col-md-2 col-form-label" })
        </div>
        <div style="display:inline" class="col-md-10">
            @Html.TextBoxFor(model => model.AssignedTo, new { @type ="email", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AssignedTo)
        </div>
        <br />
        <br />

        <div class="form-group row" style="display:inline">

            @Html.LabelFor(model => model.EstimatedEffort, new { @class = "col-md-2 col-form-label" })
        </div>
        <div style="display:inline" class="col-md-10">
            @Html.TextBoxFor(model => model.EstimatedEffort, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EstimatedEffort)
        </div>
        <br />
        <br />

        @if (ViewBag.Error != "" && ViewBag.Error != null)
        {
            <div class="alert alert-danger fade in">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>Error!</strong> @ViewBag.Error
            </div>

        }
        <br />
        <br />
        <br />
        <br />
        <input type="submit" value="Submit" class="btn btn-primary" />
    </div>

            }

